import {createStore} from 'redux';// ACTION TYPESconst GOT_MESSAGES_FROM_SERVER = 'GOT_MESSAGES_FROM_SERVER';const GOT_NEW_MESSAGE_FROM_SERVER = 'GOT_NEW_MESSSAGE_FROM_SERVER';const WRITE_MESSAGE = 'WRITE_MESSAGE';// ACTION CREATORSexport function gotMessagesFromServer(messages) {    return {        type: GOT_MESSAGES_FROM_SERVER,        messages    };}export function writeMessage(inputContent) {    return {        type: WRITE_MESSAGE,        newMessageEntry: inputContent    };}export function gotNewMessageFromServer(message) {    return {        type: GOT_NEW_MESSAGE_FROM_SERVER,        message    }}// INITIAL STATEconst initialState = {    messages: [],    newMessageEntry: ''};// REDUCERfunction reducer(state = initialState, action) {    switch (action.type) {        case GOT_MESSAGES_FROM_SERVER:            return Object.assign({}, state, {messages: action.messages});        case GOT_NEW_MESSAGE_FROM_SERVER:            return Object.assign({}, state, {message: [action.message, ...state.message]});        case WRITE_MESSAGE:            return Object.assign({}, state, {newMessageEntry: action.newMessageEntry});        default:            return state;    }}// STOREconst store = createStore(reducer);export default store;